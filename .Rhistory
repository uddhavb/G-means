set.seed(100)
library(mvtnorm)
sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 5)
x <- rmvnorm(100, mean = c(0,0), sigma = sigma, method = "chol")
x = rbind(x, rmvnorm(100, mean = c(10,10), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(0,10), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(4,4), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(5,8), sigma = sigma, method = "chol"))
set.seed(100)
library(mvtnorm)
sigma <- matrix(c(1, 0.5, 0.5, 1, 0.5, 1,0.5, 1,0.5, 1), nrow = 5)
x <- rmvnorm(100, mean = c(0,0), sigma = sigma, method = "chol")
x = rbind(x, rmvnorm(100, mean = c(10,10), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(0,10), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(4,4), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(5,8), sigma = sigma, method = "chol"))
set.seed(100)
library(mvtnorm)
sigma <- matrix(c(1, 0.5, 0.5, 1, 0.5, 1,0.5, 1,0.5, 1), nrow = 5)
x <- rmvnorm(100, mean = c(0,0), sigma = sigma, method = "chol")
x = rbind(x, rmvnorm(100, mean = c(10,10,10,10,10), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(0,10,0,10,0), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(4,4,10,10,0), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(0,10,0,10,0), sigma = sigma, method = "chol"))
set.seed(100)
library(mvtnorm)
sigma <- matrix(c(1, 0.5, 0.5, 1, 0.5, 1,0.5, 1,0.5, 1), nrow = 5)
x <- rmvnorm(100, mean = c(0,0,0,0,0), sigma = sigma, method = "chol")
x = rbind(x, rmvnorm(100, mean = c(10,10,10,10,10), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(0,10,0,10,0), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(4,4,10,10,0), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(0,10,0,10,0), sigma = sigma, method = "chol"))
set.seed(100)
library(mvtnorm)
sigma <- matrix(c(1, 0.5, 0.5, 1, 0.5, 1,0.5, 1,0.5, 1), nrow = 5)
x <- rmvnorm(100, mean = c(0,0,0,0,0), sigma = sigma, method = "chol")
x = rbind(x, rmvnorm(100, mean = c(10,10,10,10,10), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(0,10,0,10,0), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(4,4,10,10,0), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(0,10,0,10,0), sigma = sigma, method = "chol"))
set.seed(100)
library(mvtnorm)
sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 5)
x <- rmvnorm(100, mean = c(0,0,0,0,0), sigma = sigma, method = "chol")
?rmvnorm
set.seed(100)
library(mvtnorm)
sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 4)
x <- rmvnorm(100, mean = c(0,0,0,0,0), sigma = sigma, method = "chol")
clusters = read.csv("D:/output.csv")
clusters = clusters[,3]#gmeans output clusters
centroids = x # gmeans output centroids
mydata = mydata;
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
set.seed(100)
library(mvtnorm)
sigma <- matrix(c(1, 0.5, 0.5, 1), nrow = 5)
x <- rmvnorm(100, mean = c(0,0), sigma = sigma, method = "chol")
x = rbind(x, rmvnorm(100, mean = c(10,10), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(0,10), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(4,4), sigma = sigma, method = "chol"))
x = rbind(x, rmvnorm(100, mean = c(5,8), sigma = sigma, method = "chol"))csc
cdscs
clusters = read.csv("D:/output.csv")
clusters = clusters[,3]#gmeans output clusters
output = read.csv("D:/output.csv")
clusters = clusters[,3]#gmeans output clusters
output = read.csv("D:/output.csv")
clusters = output[,3]#gmeans output clusters
ls
output[,1:2]
x = c( -0.141 , 0.066)
x = rbind(x, c(4.872 ,  7.376))
x = rbind(x, c(0.224  ,10.023))
x = rbind(x, c(7.883  , 9.024))
x = rbind(x, c(10.261  ,10.292))
x = rbind(x, c( 3.830 ,  3.657))
x = rbind(x, c( -2.238,   7.203))
x
output = read.csv("D:/output.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:2];
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
main_centroid = colMeans(mydata)
sizes = rep(0, length(centroids[,1]))
for(element in clusters)
{
sizes[element] = sizes[element] + 1;
}
bss=0;
index = 0;
for(i in 1:nrow(centroids))
{
bss = bss + sizes[i]*(dist(rbind(centroids[i,],main_centroid)))^2;
}
tss = wss + bss[1]
print("BSS/TSS:")
print((bss[1]/tss)*100)
tss
bss
wss
output = read.csv("D:/output_gmean2.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:2];
mydata
x = c( 9.007  , 8.779
)
x = rbind(x, c(-0.102 ,  0.913))
x
output = read.csv("D:/output_gmean2.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:2];
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
main_centroid = colMeans(mydata)
sizes = rep(0, length(centroids[,1]))
for(element in clusters)
{
sizes[element] = sizes[element] + 1;
}
bss=0;
index = 0;
for(i in 1:nrow(centroids))
{
bss = bss + sizes[i]*(dist(rbind(centroids[i,],main_centroid)))^2;
}
tss = wss + bss[1]
print("BSS/TSS:")
print((bss[1]/tss)*100)
tss
bss[1]
wss
x = c( -0.112 ,  0.103)
x = rbind(x, c(7.145  , 6.992))
x = rbind(x, c(9.971  ,10.067))
x
output = read.csv("D:/output_gmean3.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:2];
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
main_centroid = colMeans(mydata)
sizes = rep(0, length(centroids[,1]))
for(element in clusters)
{
sizes[element] = sizes[element] + 1;
}
bss=0;
index = 0;
for(i in 1:nrow(centroids))
{
bss = bss + sizes[i]*(dist(rbind(centroids[i,],main_centroid)))^2;
}
tss = wss + bss[1]
print("BSS/TSS:")
print((bss[1]/tss)*100)
tss
bss[1]
wss
x = c( 0.108  ,10.016)
x = rbind(x, c(9.993   9.919))
x = rbind(x, c(9.993  , 9.919))
x = rbind(x, c(9.817 , -0.128))
x = rbind(x, c(0.109 , -0.053))
x
output = read.csv("D:/output_gmean4.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:2];
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
main_centroid = colMeans(mydata)
sizes = rep(0, length(centroids[,1]))
for(element in clusters)
{
sizes[element] = sizes[element] + 1;
}
bss=0;
index = 0;
for(i in 1:nrow(centroids))
{
bss = bss + sizes[i]*(dist(rbind(centroids[i,],main_centroid)))^2;
}
tss = wss + bss[1]
print("BSS/TSS:")
print((bss[1]/tss)*100)
tss
wss
bss[1]
x = c( 0.578 ,  0.490   ,0.499   ,0.500   ,0.562  , 0.761  , 0.766)
x = rbind(x, c(0.350 ,  0.409   ,0.480 ,  0.500 ,  0.449 ,  0.323 ,  0.394))
x = rbind(x, c(0.666 ,  0.694 ,  0.480  , 0.500  , 0.508 ,  0.464 ,  0.339))
x = rbind(x, c(0.707   ,0.518 ,  1.000   ,0.583  , 0.518  , 0.548 ,  0.235))
x
output = read.csv("D:/output_ecoli.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:2];
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
main_centroid = colMeans(mydata)
sizes = rep(0, length(centroids[,1]))
for(element in clusters)
{
sizes[element] = sizes[element] + 1;
}
bss=0;
index = 0;
for(i in 1:nrow(centroids))
{
bss = bss + sizes[i]*(dist(rbind(centroids[i,],main_centroid)))^2;
}
tss = wss + bss[1]
print("BSS/TSS:")
print((bss[1]/tss)*100)
output
output = read.csv("D:/output_ecoli.csv")
clusters = output[,8]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:7];
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
main_centroid = colMeans(mydata)
sizes = rep(0, length(centroids[,1]))
for(element in clusters)
{
sizes[element] = sizes[element] + 1;
}
bss=0;
index = 0;
for(i in 1:nrow(centroids))
{
bss = bss + sizes[i]*(dist(rbind(centroids[i,],main_centroid)))^2;
}
tss = wss + bss[1]
print("BSS/TSS:")
print((bss[1]/tss)*100)
wss
bss[1]
tss
output = read.csv("D:/output_gmeans5.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:2];
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
main_centroid = colMeans(mydata)
sizes = rep(0, length(centroids[,1]))
for(element in clusters)
{
sizes[element] = sizes[element] + 1;
}
bss=0;
index = 0;
for(i in 1:nrow(centroids))
{
bss = bss + sizes[i]*(dist(rbind(centroids[i,],main_centroid)))^2;
}
tss = wss + bss[1]
print("BSS/TSS:")
print((bss[1]/tss)*100)
x = c( -0.141 ,  0.066)
x = rbind(x, c( 4.872 ,  7.376))
x = rbind(x, c( 0.224,  10.023))
x = rbind(x, c( 7.883  , 9.024))
x = rbind(x, c(  10.261,  10.292))
x = rbind(x, c(   3.830  , 3.657))
x = rbind(x, c(    -2.238  , 7.203))
x
output = read.csv("D:/output_gmeans5.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:2];
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
main_centroid = colMeans(mydata)
sizes = rep(0, length(centroids[,1]))
for(element in clusters)
{
sizes[element] = sizes[element] + 1;
}
bss=0;
index = 0;
for(i in 1:nrow(centroids))
{
bss = bss + sizes[i]*(dist(rbind(centroids[i,],main_centroid)))^2;
}
tss = wss + bss[1]
print("BSS/TSS:")
print((bss[1]/tss)*100)
output = read.csv("D:/output_gmeans5.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:2];
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
main_centroid = colMeans(mydata)
sizes = rep(0, length(centroids[,1]))
for(element in clusters)
{
sizes[element] = sizes[element] + 1;
}
bss=0;
index = 0;
for(i in 1:nrow(centroids))
{
bss = bss + sizes[i]*(dist(rbind(centroids[i,],main_centroid)))^2;
}
tss = wss + bss[1]
print("BSS/TSS:")
print((bss[1]/tss)*100)
output = read.csv("D:/output_gmeans5.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:2];
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
main_centroid = colMeans(mydata)
sizes = rep(0, length(centroids[,1]))
for(element in clusters)
{
sizes[element] = sizes[element] + 1;
}
bss=0;
index = 0;
for(i in 1:nrow(centroids))
{
bss = bss + sizes[i]*(dist(rbind(centroids[i,],main_centroid)))^2;
}
tss = wss + bss[1]
print("BSS/TSS:")
print((bss[1]/tss)*100)
output = read.csv("D:/output_gmeans5.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
output = read.csv("D:/output_gmeans5.csv")
output = read.csv("D:/output_gmean5.csv")
clusters = output[,3]#gmeans output clusters
#x = c( -0.141 , 0.066)
#x = rbind(x, c(4.872 ,  7.376))
centroids = x # gmeans output centroids
mydata = output[,1:2];
index = 0;
wss = 0;
for (element in clusters) {
index = index + 1;
wss = wss + (dist(rbind(centroids[element,],mydata[index,])))^2;
}
main_centroid = colMeans(mydata)
sizes = rep(0, length(centroids[,1]))
for(element in clusters)
{
sizes[element] = sizes[element] + 1;
}
bss=0;
index = 0;
for(i in 1:nrow(centroids))
{
bss = bss + sizes[i]*(dist(rbind(centroids[i,],main_centroid)))^2;
}
tss = wss + bss[1]
print("BSS/TSS:")
print((bss[1]/tss)*100)
wss
bss[1]
tss
